name: Zombienet NPM Automated Release
on:
  push:
    branches: [nik-check-version-change-in-ci]
jobs:
  publish:
    name: Build & Publish to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
        working-directory: "./javascript"
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: Build NPM Package
        run: npm run build
        working-directory: "./javascript"

      - name: Check if 'CLI' version has been updated
        ## using latest from original maintainer (DO NOT CHANGE)
        uses: Rober19/compare-npm-versions-ci@a38b02a14bbee73badddf83e13ebcb3e674c6df5
        id: cli_version
        with:
          path: "./javascript/packages/cli"
          npm_package_name: "@parity/zombienet"

      - name: Check if 'Orchestrator' version has been updated
        ## using latest from original maintainer (DO NOT CHANGE)
        uses: Rober19/compare-npm-versions-ci@a38b02a14bbee73badddf83e13ebcb3e674c6df5
        id: orch_version
        with:
          path: "./javascript/packages/orchestrator"
          npm_package_name: "@zombienet/orchestrator"

      - name: Check if 'Utils' version has been updated
        ## using latest from original maintainer (DO NOT CHANGE)
        uses: Rober19/compare-npm-versions-ci@a38b02a14bbee73badddf83e13ebcb3e674c6df5
        id: utils_version
        with:
          path: "./javascript/packages/utils"
          npm_package_name: "@zombienet/utils"
      - name: CLI Local/NPM versions
        if: steps.cli_version.outputs.npm_is_greater != 'true'
        run: |
          echo "CLI Local version is ${{ steps.cli_version.outputs.version }}. NPM version is ${{ steps.cli_version.outputs.pkg_npm_version }}."
      - name: ORCH Local/NPM versions
        if: steps.orch_version.outputs.npm_is_greater != 'true'
        run: |
          echo "ORCH Local version is ${{ steps.orch_version.outputs.version }}. NPM version is ${{ steps.orch_version.outputs.pkg_npm_version }}."
      - name: UTILS Local/NPM versions
        if: steps.utils_version.outputs.npm_is_greater != 'true'
        run: |
          echo "UTILS Local version is ${{ steps.utils_version.outputs.version }}. NPM version is ${{ steps.utils_version.outputs.pkg_npm_version }}."

      - name: Pack Utils
        if: steps.utils_version.outputs.npm_is_greater != 'true'
        run: npm pack
        working-directory: "./javascript/packages/utils"
      - name: Upload Utils
        if: steps.utils_version.outputs.npm_is_greater != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "./javascript/packages/utils/*.tgz"
      - name: Pack orchestrator
        if: steps.orch_version.outputs.npm_is_greater != 'true'
        run: npm pack
        working-directory: "./javascript/packages/orchestrator"
      - name: Upload Orchestrator
        if: steps.orch_version.outputs.npm_is_greater != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "./javascript/packages/orchestrator/*.tgz"
      - name: Pack CLI
        if: steps.cli_version.outputs.npm_is_greater != 'true'
        run: npm pack
        working-directory: "./javascript/packages/cli"
      - name: Upload CLI
        if: steps.cli_version.outputs.npm_is_greater != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: "./javascript/packages/cli/*.tgz"
      - name: NPM Publish automation
        if: steps.utils_version.outputs.npm_is_greater != 'true' || steps.orch_version.outputs.npm_is_greater != 'true' || steps.cli_version.outputs.npm_is_greater != 'true'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/paritytech/npm_publish_automation/actions/workflows/publish.yml/dispatches
          ref: main
          inputs: '${{ format(''{{ "repo": "{0}", "run_id": "{1}" }}'', github.repository, github.run_id) }}'
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_PUBLISH_AUTOMATION_TOKEN }}
